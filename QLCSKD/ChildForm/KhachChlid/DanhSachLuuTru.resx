<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bunifuPanel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>